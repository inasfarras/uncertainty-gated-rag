[tool.poetry]
name = "agentic-rag"
version = "0.1.0"
description = "Agentic RAG system for advanced information retrieval and generation"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "agentic_rag", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.0"
uvicorn = {extras = ["standard"], version = "^0.27.1"}
pydantic = "^2.6.3"
numpy = "^1.26.4"
pandas = "^2.2.1"
scikit-learn = "^1.4.1.post1"
faiss-cpu = "^1.7.4"
tiktoken = "^0.6.0"
transformers = "^4.38.2"
sentence-transformers = "^2.5.1"
ragas = "^0.1.3"
datasets = "^2.17.1"
nltk = "^3.8.1"
spacy = "^3.7.4"
pyyaml = "^6.0.1"
rich = "^13.7.0"
loguru = "^0.7.2"
typer = "^0.9.0"
httpx = "^0.27.0"
orjson = "^3.9.15"
openai = {version = "^1.12.0", optional = true}
llama-cpp-python = {version = "^0.2.56", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
pytest-cov = "^4.1.0"
ruff = "^0.3.0"
black = "^24.2.0"
mypy = "^1.8.0"
pre-commit = "^3.6.2"

[tool.poetry.extras]
openai = ["openai"]
llama = ["llama-cpp-python"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
